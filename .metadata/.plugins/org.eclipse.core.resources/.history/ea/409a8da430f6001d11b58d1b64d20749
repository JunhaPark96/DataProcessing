package service;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

import connection.JDBC;
import repository.CustomerRepository;
import table.Customer;

public class CustomerImpl implements CustomerRepository{
	private static final Logger LOGGER = Logger.getLogger(CustomerImpl.class.getName());

	private static JDBC jdbc = JDBC.getInstance();
	Connection conn = null;
	Statement stmt = null;
	
	HashMap<Integer, Integer> mgrEmpno = new HashMap<>();
	private List<Customer> customerList = new ArrayList<>();
	
	@Override
	public List<Customer> printCustomerList() {
	    try {
	        Connection conn = jdbc.getConnection();
	        conn.setAutoCommit(false);
//	        Statement stmt = conn.createStatement();
	        String sql = "{call incentive}";
	        CallableStatement cstmt = conn.prepareCall(sql);
	        cstmt.execute();
	        conn.commit();
	        cstmt.close();

	        
	    } catch (SQLException e) {
	        e.printStackTrace();
	        LOGGER.log(Level.SEVERE, "An error occurred while executing the query", e);
	    } finally {
	    	try {
				if (stmt != null) {
					stmt.close();
				}
			} catch (SQLException e) {
				System.out.println("statement 종료 실패: " + e.getMessage());
				LOGGER.log(Level.WARNING, "Failed to close statement", e);
			}
	    }
	    return customerList;
	}
}
